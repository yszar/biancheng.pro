// src/.vuepress/config.ts
import { defineUserConfig } from "vuepress";

// src/.vuepress/theme.ts
import { hopeTheme } from "vuepress-theme-hope";

// src/.vuepress/navbar/en.ts
import { navbar } from "vuepress-theme-hope";
var enNavbar = navbar([
  "/en/",
  { text: "Demo", icon: "discover", link: "/en/demo/" },
  {
    text: "Guide",
    icon: "creative",
    prefix: "/en/guide/",
    children: [
      {
        text: "Bar",
        icon: "creative",
        prefix: "bar/",
        children: ["baz", { text: "...", icon: "more", link: "" }]
      },
      {
        text: "Foo",
        icon: "config",
        prefix: "foo/",
        children: ["ray", { text: "...", icon: "more", link: "" }]
      }
    ]
  },
  {
    text: "V2 Docs",
    icon: "note",
    link: "https://vuepress-theme-hope.github.io/v2/"
  }
]);

// src/.vuepress/navbar/zh.ts
import { navbar as navbar2 } from "vuepress-theme-hope";
var zhNavbar = navbar2([
  { text: "\u535A\u5BA2", icon: "blog", link: "/blog.html" },
  { text: "\u5B66\u4E60\u8DEF\u7EBF", icon: "luxian", link: "/home.html" },
  { text: "Python \u5165\u95E8\u6559\u7A0B", icon: "python", link: "/python/" },
  { text: "\u5B66\u4E60\u8D44\u6599", icon: "PDF", link: "/pdf/" },
  {
    text: "\u5173\u4E8E\u6211",
    icon: "guanyuwo",
    children: [
      {
        text: "\u5173\u4E8E\u6211\u8FD9\u4E2A\u7AD9",
        icon: "guanyuzhan",
        link: "/this-website/"
      },
      {
        text: "\u5173\u4E8E\u6211\u8FD9\u4E2A\u4EBA",
        icon: "guanyuren",
        link: "/about.html"
      }
    ]
  }
]);

// src/.vuepress/sidebar/en.ts
import { sidebar } from "vuepress-theme-hope";
var enSidebar = sidebar({
  "/en/": [
    "",
    {
      icon: "discover",
      text: "Demo",
      prefix: "demo/",
      link: "demo/",
      children: "structure"
    },
    {
      text: "Docs",
      icon: "note",
      prefix: "guide/",
      children: "structure"
    },
    "slides"
  ]
});

// src/.vuepress/sidebar/zh.ts
import { sidebar as sidebar2 } from "vuepress-theme-hope";
var zhSidebar = sidebar2(
  {
    "/": [
      {
        icon: "home",
        text: "\u5B66\u4E60\u8DEF\u7EBF",
        link: "home",
        prefix: "roadmap/",
        children: "structure"
      }
    ],
    "/python/": "structure",
    "/this-website/": [
      {
        text: "\u5173\u4E8E\u6211\u8FD9\u4E2A\u7AD9",
        icon: "guanyuzhan",
        link: "/this-website/",
        prefix: "/this-website/",
        collapsible: false,
        children: [
          {
            text: "1. VuePress\u5B89\u88C5\u4E0E\u914D\u7F6E",
            link: "vuepress.md",
            icon: "peizhi"
          },
          {
            text: "2. Github Actions \u6301\u7EED\u96C6\u6210",
            link: "github-actions.md",
            icon: "github"
          },
          {
            text: "3. \u5199\u4F5C\u5DE5\u5177 Obsidian",
            link: "obsidian.md",
            icon: "page"
          }
        ]
      }
    ]
  }
);

// src/.vuepress/theme.ts
var theme_default = hopeTheme({
  hostname: "https://iamjy.com",
  author: {
    name: "Jiu Yang",
    url: "https://iamjy.com"
  },
  blog: {
    description: "\u5168\u5E72\u5DE5\u7A0B\u5E08 / \u6E38\u620F\u7231\u597D\u8005 / C\u7F57\u8111\u6B8B\u7C89",
    intro: "/about.html",
    medias: {
      GitHub: "https://github.com/yszar",
      Gmail: "mailto:yszaryszar@gmail.com",
      Gitee: "https://gitee.com/yszaryszar",
      Zhihu: "https://www.zhihu.com/people/iamjy.com"
    },
    roundAvatar: true,
    articleInfo: [
      "Author",
      "Original",
      "Date",
      "Category",
      "Tag",
      "Word",
      "ReadingTime"
    ]
  },
  navbar: zhNavbar,
  logo: "https://static.iamjy.com/logo.png",
  logoDark: "https://static.iamjy.com/logo.png",
  repo: "yszar/biancheng.pro",
  sidebar: zhSidebar,
  sidebarSorter: [],
  headerDepth: 2,
  pageInfo: [
    "Author",
    "Original",
    "Date",
    "Category",
    "Tag",
    "Word",
    "ReadingTime"
  ],
  metaLocales: {
    editLink: "\u5728 GitHub \u4E0A\u7F16\u8F91\u6B64\u9875"
  },
  docsBranch: "master",
  docsDir: "src",
  footer: '<a href="https://beian.miit.gov.cn/" target="_blank">\u9647ICP\u590715003024\u53F7</a>',
  displayFooter: true,
  iconAssets: "//at.alicdn.com/t/c/font_3743716_v54q5atint.css",
  iconPrefix: "iconfont icon-",
  themeColor: {
    blue: "#2196f3",
    red: "#f26d6d",
    green: "#3eaf7c",
    orange: "#fb9b5f"
  },
  fullscreen: true,
  plugins: {
    blog: {
      autoExcerpt: true
    },
    comment: {
      provider: "Giscus",
      repo: "yszar/biancheng.pro",
      repoId: "R_kgDOIVrevg",
      category: "Announcements",
      categoryId: "DIC_kwDOIVrevs4CSSpE"
    },
    copyright: {
      hostname: "https://biancheng.pro",
      author: "Jiu Yang",
      license: "\u300C\u7F72\u540D 4.0 \u56FD\u9645\uFF08CC BY 4.0\uFF09\u300D",
      global: true
    },
    mdEnhance: {
      align: true,
      attrs: true,
      chart: true,
      codetabs: true,
      container: true,
      demo: true,
      echarts: true,
      flowchart: true,
      footnote: false,
      gfm: true,
      imageLazyload: true,
      imageMark: false,
      imageTitle: true,
      imageSize: true,
      include: true,
      katex: true,
      mark: true,
      mathjax: false,
      mermaid: true,
      playground: {
        presets: ["ts", "vue"]
      },
      presentation: {
        plugins: ["highlight", "math", "search", "notes", "zoom"]
      },
      stylize: [
        {
          matcher: "Recommanded",
          replacer: ({ tag }) => {
            if (tag === "em")
              return {
                tag: "Badge",
                attrs: { type: "tip" },
                content: "Recommanded"
              };
          }
        }
      ],
      sub: true,
      sup: true,
      tabs: true,
      tasklist: false,
      vuePlayground: true
    },
    copyCode: { showInMobile: true },
    pwa: {
      favicon: "/favicon.ico",
      update: "hint",
      cacheHTML: true,
      cachePic: true,
      appendBase: true,
      apple: {
        icon: "/assets/icon/152.png",
        statusBarColor: "black"
      },
      msTile: {
        image: "/assets/icon/144.png",
        color: "#ffffff"
      },
      manifest: {
        icons: [
          {
            src: "/assets/icon/512.png",
            sizes: "512x512",
            purpose: "maskable",
            type: "image/png"
          },
          {
            src: "/assets/icon/192.png",
            sizes: "192x192",
            purpose: "maskable",
            type: "image/png"
          },
          {
            src: "/assets/icon/512.png",
            sizes: "512x512",
            type: "image/png"
          },
          {
            src: "/assets/icon/192.png",
            sizes: "192x192",
            type: "image/png"
          }
        ]
      }
    }
  }
});

// src/.vuepress/config.ts
var config_default = defineUserConfig({
  base: "/",
  lang: "zh-CN",
  title: "\u7F16\u7A0B\u5B66\u4E60\u7F51",
  description: "\u5FEB\u6765\uFF01\u4E00\u8D77\u6765\u5B66\u7F16\u7A0B\uFF01",
  head: [],
  theme: theme_default,
  shouldPrefetch: false
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
